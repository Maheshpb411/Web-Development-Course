How to make a stylish websites,,,,,,,

fav icons -> it is favourite icons which are used to to show the icon for website with the title name.

    
The simplest way to add an icon to your HTML page, is with an icon library, such as Font Awesome.

Add the name of the specified icon class to any inline HTML element (like <i> or <span>).

All the icons in the icon libraries below, are scalable vectors that can be customized with CSS (size, color, shadow, etc.)  

<!DOCTYPE html>
<html>
<head>
<script src="https://kit.fontawesome.com/a076d05399.js"></script>
</head>
<body>

<i class="fas fa-cloud"></i>
<i class="fas fa-heart"></i>
<i class="fas fa-car"></i>
<i class="fas fa-file"></i>
<i class="fas fa-bars"></i>

</body>
</html>


divs -> means divisions which are basically make a boxes type on the website.
     -> divs has a very important role in css designing.....
     
All HTML elements can be considered as boxes. In CSS, the term "box model" is used when talking about design and layout.

The CSS box model is essentially a box that wraps around every HTML element. It consists of: margins, borders, padding, and the actual content. The image below illustrates the box model:

Content - The content of the box, where text and images appear
Padding - Clears an area around the content. The padding is transparent
Border - A border that goes around the padding and content
Margin - Clears an area outside the border. The margin is transparent


div {
  width: 300px;
  border: 15px solid green;
  padding: 50px;
  margin: 20px;
}

div {
  width: 320px;
  padding: 10px;
  border: 5px solid gray;
  margin: 0;
}

CSS DISPLAY -> there are three types of display properties.
1.inline -> An inline element does not start on a new line and only takes up as much width as necessary.

2.block -> A block-level element always starts on a new line and takes up the full width available (stretches out to the left and right as far as it can).

3.inline-block -> Compared to display: inline, the major difference is that display: inline-block allows to set a width and height on the element.

Also, with display: inline-block, the top and bottom margins/paddings are respected, but with display: inline they are not.

Compared to display: block, the major difference is that display: inline-block does not add a line-break after the element, so the element can sit next to other elements.

4.none -> display: none; is commonly used with JavaScript to hide and show elements without deleting and recreating them. Take a look at our last example on this page if you want to know how this can be achieved.
       ->visibility:hidden; also hides an element.
